[build-system]
requires = [
    "setuptools>=64",
]
build-backend = "setuptools.build_meta"

[project]
name = "sqlalchemy-hana"
version = "3.0.3"
description = "SQLAlchemy dialect for SAP HANA"
keywords = [
    "sqlalchemy",
    "sap",
    "hana",
]
requires-python = "~=3.9"
readme = "README.rst"
authors = [
    { name = "Christoph Heer", email = "christoph.heer@sap.com" },
]
maintainers = [
    { name = "Christoph Heer", email = "christoph.heer@sap.com" },
    { name = "Kai Harder", email = "kai.harder@sap.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: SQL",
    "Topic :: Database",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "sqlalchemy>=1.4.0,<3",
    "hdbcli~=2.10",
]
license = "Apache-2.0"
license-files = [
    "LICENSE",
]

[project.optional-dependencies]
dev = [
    "isort==6.0.1",
    "black==25.1.0",
    "pre-commit==4.3.0",
    "flake8==7.3.0",
    "flake8-tergeo==25.8.13.0",
    "pylint==3.3.8",
    "mypy==1.17.1",
    "types-hdbcli==2.25.0.20250809",
    "typing-extensions==4.15.0",
    "yesqa==1.5.0",
    "pyupgrade==3.20.0",
]
test = [
    "pytest==8.4.2",
    "pytest-cov==6.3.0",
    "coverage[toml]==7.10.6",
    "diff-cover[toml]==9.6.0",
    "pytest-randomly==3.16.0",
]
alembic = [
    "alembic~=1.12",
]

[project.entry-points."sqlalchemy.dialects"]
hana = "sqlalchemy_hana.dialect:HANAHDBCLIDialect"
"hana.hdbcli" = "sqlalchemy_hana.dialect:HANAHDBCLIDialect"

[project.urls]
Repository = "https://github.com/SAP/sqlalchemy-hana"
"Issue Tracker" = "https://github.com/SAP/sqlalchemy-hana/issues"
Changelog = "https://github.com/SAP/sqlalchemy-hana/blob/main/CHANGES.rst"

[tool.setuptools.packages.find]
include = [
    "sqlalchemy_hana",
]

[tool.setuptools.package-data]
sqlalchemy_hana = [
    "py.typed",
]

[tool.isort]
profile = "black"
add_imports = [
    "from __future__ import annotations",
]

[tool.pytest.ini_options]
log_level = "DEBUG"
xfail_strict = true
filterwarnings = [
    "error",
    "ignore:There is no current event loop:DeprecationWarning",
]
markers = [
    "backend: used by sqlalchemy",
    "mypy: used by sqlalchemy",
]

[tool.diff_cover]
addopts = "--strict-markers"
include_untracked = true
fail_under = 80

[tool.pylint.master]
max-line-length = 100

[tool.pylint."messages control"]
enable = [
    "all",
]
disable = [
    "fixme",
    "locally-disabled",
    "suppressed-message",
    "file-ignored",
    "missing-class-docstring",
    "missing-function-docstring",
    "abstract-method",
    "assignment-from-none",
    "unused-argument",
    "protected-access",
    "not-callable",
    "no-member",
    "use-implicit-booleaness-not-comparison-to-zero",
    "too-many-ancestors",
    "too-few-public-methods",
    "too-many-public-methods",
    "too-many-function-args",
    "too-many-lines",
    "too-many-branches",
    "too-many-return-statements",
    "too-many-boolean-expressions",
    "too-many-arguments",
    "too-many-positional-arguments",
    "duplicate-code",
]

[tool.pylint.basic]
good-names = [
    "visit_TINYINT",
    "visit_SMALLDECIMAL",
    "visit_SECONDDATE",
    "visit_ALPHANUM",
    "visit_JSON",
    "visit_REAL_VECTOR",
    "REAL_VECTOR",
]

[tool.mypy]
pretty = true
show_column_numbers = true
show_error_codes = true
enable_error_code = [
    "explicit-override",
    "possibly-undefined",
    "ignore-without-code",
    "deprecated",
]
deprecated_calls_exclude = [
    "sqlalchemy_hana",
]
strict_bytes = true
strict = true
strict_optional = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
strict_concatenate = true

[[tool.mypy.overrides]]
ignore_errors = true
module = [
    "test.*",
]
